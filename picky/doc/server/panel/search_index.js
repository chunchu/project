var search_data = {"index":{"searchIndex":["performant","array","adapters","rack","base","liveparameters","search","application","backends","backend","file","basic","json","memory","basic","json","marshal","text","redis","basic","float","list","string","bundle","categories","category","charactersubstituters","westeuropean","frontendadapters","helpers","measuring","index","indexers","base","parallel","serial","indexes","memory","redis","interfaces","liveparameters","couldnotupdateconfigurationerror","nosourcespecifiedexception","query","indexes","indexescheck","weights","harakiri","results","search","sinatra","sources","base","csv","nofilegiven","couch","nodbgiven","db","delicious","mongo","nodbgiven","tokenizer","tokenizers","location","try","<<()","==()","[]()","[]()","[]()","[]()","[]()","[]()","after_indexing()","allocation_for()","allocations_ary_for()","allocations_for()","app_for()","backend()","backup()","backup()","backup()","backup()","backup_directory()","backup_file_path_of()","boost()","bundle_for()","cache()","cache_ok?()","cache_ok?()","cache_small?()","cache_small?()","call()","call()","cap()","cap?()","case_sensitive()","category()","check()","check_argument_in()","check_external_interface()","check_source_empty()","chunksize()","clear()","clear()","clear()","clear()","clear_categories()","clear_indexes()","close_child()","combination_for()","connect_backend()","connect_backend()","count()","create_configuration()","create_configuration()","create_configuration()","create_inverted()","create_inverted()","create_inverted()","create_similarity()","create_similarity()","create_similarity()","create_weights()","create_weights()","create_weights()","define_after_indexing()","define_category()","define_indexing()","define_key_format()","define_ranged_category()","define_result_identifier()","define_source()","delete()","delete()","delete()","downcase?()","dump()","dump()","dump()","dump()","dump()","dump()","dump_caches()","duration()","each_category()","empty_tokens()","execute()","expand_combinations_from()","extended()","extension()","extension()","extension()","extension()","extension()","extension()","extract_configuration()","extract_host()","extract_qualifiers_from()","extract_source()","extract_source()","extracted()","from()","from()","generate_caches_from_memory()","generate_caches_from_source()","generate_intermediate_result_id()","generate_partial()","harakiri()","harakiri()","harakiri?()","harvest()","harvest()","harvest()","harvest()","harvest()","harvest_statement()","harvest_statement_with_offset()","host()","identifier()","identifier()","identifier()","identifier()","ids()","ids()","ids()","ids()","ids()","index()","index()","index()","index()","index_default()","index_default=()","index_directory()","index_for_tests()","index_in_parallel()","index_name()","index_path()","indexer()","indexing()","indexing()","indexing()","inject_possible_for()","instance()","key_format()","key_format()","key_format()","kill_each_worker_except()","kill_worker()","load()","load()","load()","load()","load()","load_from_cache()","log_type()","map_categories()","maximum_tokens()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","normalize_with_patterns()","normalize_with_patterns?()","normalizes_words()","open()","output()","parameters()","pid()","possible_categories()","possible_combinations()","possible_for()","prepare()","prepare()","prepare!()","prepare_backup()","prepare_index_directory()","prepared_allocations_for()","prepared_index_file()","prepared_index_path()","preprocess()","pretokenize()","process()","process()","qualifiers()","query_default()","query_default=()","querying_removes_characters()","querying_removes_characters=()","querying_splits_text_on()","querying_splits_text_on=()","querying_stopwords()","querying_stopwords=()","raise_cache_missing()","raise_no_source()","raise_not_found()","raise_not_found()","raise_unless_cache_exists()","raise_unless_index_exists()","raise_unless_index_ok()","raise_unless_similarity_exists()","raise_unless_similarity_ok()","ranged_category()","register()","register()","reindex()","reject()","rejects_token_if()","reload()","reload()","remove_illegals()","remove_non_single_stopwords()","remove_stopwords()","remove_worker()","removes_characters()","reset_rack_adapter()","respond_with()","restore()","restore()","restore()","result_identifier()","retrieve()","retrieve()","retrieve()","retrieve()","retrieve()","route()","saved()","score_for()","search()","search_with()","searched()","searching()","searching()","searching()","similar()","similar_possible_for()","similar_tokens_for()","size()","size_of()","snapshot_table_name()","source()","source()","split()","splits_text_on()","start_master_process_thread()","stopwords()","substitute()","substitute_characters()","substitutes_characters_with()","take_snapshot()","take_snapshot()","timed()","to_app()","to_app()","to_hash()","to_json()","to_routes()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_stats()","to_stdout()","tokenize()","tokenize()","tokenized()","tokenizer()","tokenizer()","tokenizer()","tokens_for()","total()","try_updating_configuration_with()","warn_cache_small()","warn_if_index_small()","warn_if_similarity_small()","weight()","weight_for()","with_data_snapshot()","with_data_snapshot()","with_snapshot()","worker_pids()","write_parent()","picky.rb","rack.rb","base.rb","live_parameters.rb","search.rb","analyzer.rb","application.rb","backend.rb","file.rb","basic.rb","json.rb","memory.rb","basic.rb","json.rb","marshal.rb","text.rb","redis.rb","basic.rb","float.rb","list.rb","string.rb","bundle.rb","bundling.rb","location.rb","categories.rb","categories_indexed.rb","categories_indexing.rb","category.rb","category_indexed.rb","category_indexing.rb","west_european.rb","constants.rb","cores.rb","deployment.rb","maybe_compile.rb","makefile","extconf.rb","mkmf.log","performant.c","array.rb","class.rb","hash.rb","module.rb","object.rb","symbol.rb","rack.rb","aliases.rb","base.rb","default.rb","infix.rb","none.rb","strategy.rb","substring.rb","partial_generator.rb","default.rb","double_metaphone.rb","metaphone.rb","none.rb","phonetic.rb","soundex.rb","strategy.rb","similarity_generator.rb","strategy.rb","default.rb","logarithmic.rb","strategy.rb","weights_generator.rb","measuring.rb","index.rb","index_indexed.rb","index_indexing.rb","bundle.rb","calculation.rb","location.rb","wrapper.rb","location.rb","exact_first.rb","base.rb","parallel.rb","serial.rb","indexes.rb","indexes_indexed.rb","indexes_indexing.rb","bundle.rb","location.rb","live_parameters.rb","loader.rb","from_30_to_31.rb","no_source_specified_exception.rb","performant.rb","allocation.rb","allocations.rb","combination.rb","combinations.rb","indexes.rb","indexes_check.rb","qualifier_category_mapper.rb","token.rb","tokens.rb","weights.rb","harakiri.rb","results.rb","search.rb","sinatra.rb","base.rb","couch.rb","csv.rb","db.rb","delicious.rb","mongo.rb","base.rb","location.rb","statistics.rb","tasks.rb","tokenizer.rb","location.rb","application.rake","checks.rake","framework.rake","index.rake","routes.rake","server.rake","statistics.rake","todo.rake","try.rake","try.rb"],"longSearchIndex":["lib/picky/ext/ruby19/performant.c","performant","picky","picky::adapters","picky::adapters::rack","picky::adapters::rack","picky::adapters::rack","picky","picky","picky::backends","picky::backends","picky::backends::file","picky::backends::file","picky::backends","picky::backends::memory","picky::backends::memory","picky::backends::memory","picky::backends::memory","picky::backends","picky::backends::redis","picky::backends::redis","picky::backends::redis","picky::backends::redis","picky","picky","picky","picky","picky::charactersubstituters","picky","picky","picky::helpers","picky","picky","picky::indexers","picky::indexers","picky::indexers","picky","picky::indexes","picky::indexes","picky","picky::interfaces","picky::interfaces::liveparameters","picky","picky","picky::query","picky::query","picky::query","picky::rack","picky","picky","picky","picky","picky::sources","picky::sources","picky::sources::csv","picky::sources","picky::sources::couch","picky::sources","picky::sources","picky::sources","picky::sources::mongo","picky","picky","picky::tokenizers","picky","picky::categories","picky::query::weights","picky::backends::file::json","picky::backends::redis::float","picky::backends::redis::list","picky::backends::redis::string","picky::categories","picky::indexes","picky::index","picky::query::indexes","picky::query::indexes","picky::query::indexes","picky::adapters::rack","picky::index","picky::backends::memory::basic","picky::backends::redis::basic","picky::bundle","picky::category","picky::backends::memory::basic","picky::backends::memory::basic","picky::search","picky::category","picky::category","picky::backends::memory::basic","picky::backends::redis::basic","picky::backends::memory::basic","picky::backends::redis::basic","picky::application","picky::rack::harakiri","picky::tokenizer","picky::tokenizer","picky::tokenizer","picky::index","picky::category","picky::tokenizer","picky::application","picky::index","picky::sources::db","picky::backends::file::json","picky::backends::redis::list","picky::backends::redis::string","picky::category","picky::categories","picky::indexes","picky::interfaces::liveparameters","picky::category","picky::sources::base","picky::sources::db","picky::sources::db","picky::backends::file","picky::backends::memory","picky::backends::redis","picky::backends::file","picky::backends::memory","picky::backends::redis","picky::backends::file","picky::backends::memory","picky::backends::redis","picky::backends::file","picky::backends::memory","picky::backends::redis","picky::index","picky::index","picky::index","picky::index","picky::index","picky::index","picky::index","picky::backends::memory::basic","picky::backends::redis::basic","picky::bundle","picky::tokenizer","picky::backends::file::json","picky::backends::memory::json","picky::backends::memory::marshal","picky::backends::memory::text","picky::backends::redis::list","picky::backends::redis::string","picky::category","picky::results","picky::category","picky::tokenizer","picky::search","picky::query::indexes","picky::sinatra","picky::backends::file::basic","picky::backends::file::json","picky::backends::memory::basic","picky::backends::memory::json","picky::backends::memory::marshal","picky::backends::memory::text","picky::interfaces::liveparameters","picky::backends::redis","picky::category","picky::category","picky::index","picky::adapters::rack::search","picky::category","picky::results","picky::category","picky::category","picky::backends::redis","picky::category","picky::interfaces::liveparameters","picky::rack::harakiri","picky::rack::harakiri","picky::sources::csv","picky::sources::couch","picky::sources::db","picky::sources::delicious","picky::sources::mongo","picky::sources::db","picky::sources::db","picky::backends::redis","picky::bundle","picky::category","picky::index","picky::indexes","picky::backends::file","picky::backends::memory","picky::backends::redis","picky::category","picky::results","picky::category","picky::index","picky::indexers::base","picky::indexes","picky::tokenizer","picky::tokenizer","picky::category","picky::indexes","picky::index","picky::category","picky::bundle","picky::category","picky::application","picky::index","picky::sinatra","picky::categories","picky::indexes","picky::bundle","picky::category","picky::index","picky::interfaces::liveparameters","picky::interfaces::liveparameters","picky::backends::file::json","picky::backends::memory::json","picky::backends::memory::marshal","picky::backends::memory::text","picky::backends::redis::basic","picky::category","picky::results","picky::query::indexes","picky::tokenizer","picky::adapters::rack::liveparameters","picky::adapters::rack::search","picky::backends::file::basic","picky::backends::memory::basic","picky::backends::redis","picky::backends::redis::basic","picky::bundle","picky::categories","picky::category","picky::index","picky::indexers::base","picky::indexes","picky::indexes::memory","picky::indexes::redis","picky::interfaces::liveparameters","picky::interfaces::liveparameters::couldnotupdateconfigurationerror","picky::query::indexes","picky::query::weights","picky::rack::harakiri","picky::results","picky::search","picky::sources::csv","picky::sources::couch","picky::sources::db","picky::sources::delicious","picky::sources::mongo","picky::tokenizer","picky::tokenizers::location","picky::try","picky::tokenizer","picky::tokenizer","picky::tokenizer","picky::backends::memory::text","picky::try","picky::interfaces::liveparameters","picky::backends::redis","picky::categories","picky::categories","picky::categories","picky::category","picky::indexers::base","picky::results","picky::backends::memory::basic","picky::category","picky::query::indexes","picky::category","picky::category","picky::tokenizer","picky::tokenizer","picky::indexers::parallel","picky::indexers::serial","picky::category","picky::tokenizer","picky::tokenizer","picky::interfaces::liveparameters","picky::interfaces::liveparameters","picky::interfaces::liveparameters","picky::interfaces::liveparameters","picky::interfaces::liveparameters","picky::interfaces::liveparameters","picky::bundle","picky::index","picky::categories","picky::indexes","picky::bundle","picky::bundle","picky::bundle","picky::bundle","picky::bundle","picky::index","picky::indexes","picky::indexes","picky::category","picky::tokenizer","picky::tokenizer","picky::application","picky::category","picky::tokenizer","picky::tokenizer","picky::tokenizer","picky::interfaces::liveparameters","picky::tokenizer","picky::application","picky::adapters::rack::base","picky::backends::memory::basic","picky::bundle","picky::category","picky::index","picky::backends::file::json","picky::backends::memory::json","picky::backends::memory::marshal","picky::backends::memory::text","picky::backends::redis::basic","picky::application","picky::try","picky::query::weights","picky::search","picky::search","picky::try","picky::application","picky::search","picky::sinatra","picky::bundle","picky::categories","picky::categories","picky::backends::redis::basic","picky::backends::memory::basic","picky::sources::db","picky::category","picky::index","picky::tokenizer","picky::tokenizer","picky::interfaces::liveparameters","picky::tokenizer","picky::charactersubstituters::westeuropean","picky::tokenizer","picky::tokenizer","picky::sources::base","picky::sources::db","picky::helpers::measuring","picky::adapters::rack::liveparameters","picky::adapters::rack::search","picky::results","picky::results","picky::application","picky::backends::backend","picky::backends::memory::basic","picky::backends::redis::basic","picky::bundle","picky::categories","picky::category","picky::index","picky::indexes","picky::interfaces::liveparameters","picky::query::weights","picky::results","picky::search","picky::sources::csv","picky::sources::couch","picky::sources::db","picky::sources::delicious","picky::sources::mongo","picky::tokenizer","picky::application","picky::try","picky::tokenizer","picky::tokenizers::location","picky::search","picky::category","picky::index","picky::indexes","picky::tokenizer","picky::results","picky::interfaces::liveparameters","picky::bundle","picky::bundle","picky::bundle","picky::category","picky::query::weights","picky::category","picky::index","picky::sources::base","picky::interfaces::liveparameters","picky::interfaces::liveparameters","files/lib/picky_rb.html","files/lib/picky/adapters/rack_rb.html","files/lib/picky/adapters/rack/base_rb.html","files/lib/picky/adapters/rack/live_parameters_rb.html","files/lib/picky/adapters/rack/search_rb.html","files/lib/picky/analyzer_rb.html","files/lib/picky/application_rb.html","files/lib/picky/backends/backend_rb.html","files/lib/picky/backends/file_rb.html","files/lib/picky/backends/file/basic_rb.html","files/lib/picky/backends/file/json_rb.html","files/lib/picky/backends/memory_rb.html","files/lib/picky/backends/memory/basic_rb.html","files/lib/picky/backends/memory/json_rb.html","files/lib/picky/backends/memory/marshal_rb.html","files/lib/picky/backends/memory/text_rb.html","files/lib/picky/backends/redis_rb.html","files/lib/picky/backends/redis/basic_rb.html","files/lib/picky/backends/redis/float_rb.html","files/lib/picky/backends/redis/list_rb.html","files/lib/picky/backends/redis/string_rb.html","files/lib/picky/bundle_rb.html","files/lib/picky/bundling_rb.html","files/lib/picky/calculations/location_rb.html","files/lib/picky/categories_rb.html","files/lib/picky/categories_indexed_rb.html","files/lib/picky/categories_indexing_rb.html","files/lib/picky/category_rb.html","files/lib/picky/category_indexed_rb.html","files/lib/picky/category_indexing_rb.html","files/lib/picky/character_substituters/west_european_rb.html","files/lib/picky/constants_rb.html","files/lib/picky/cores_rb.html","files/lib/picky/deployment_rb.html","files/lib/picky/ext/maybe_compile_rb.html","files/lib/picky/ext/ruby19/makefile.html","files/lib/picky/ext/ruby19/extconf_rb.html","files/lib/picky/ext/ruby19/mkmf_log.html","files/lib/picky/ext/ruby19/performant_c.html","files/lib/picky/extensions/array_rb.html","files/lib/picky/extensions/class_rb.html","files/lib/picky/extensions/hash_rb.html","files/lib/picky/extensions/module_rb.html","files/lib/picky/extensions/object_rb.html","files/lib/picky/extensions/symbol_rb.html","files/lib/picky/frontend_adapters/rack_rb.html","files/lib/picky/generators/aliases_rb.html","files/lib/picky/generators/base_rb.html","files/lib/picky/generators/partial/default_rb.html","files/lib/picky/generators/partial/infix_rb.html","files/lib/picky/generators/partial/none_rb.html","files/lib/picky/generators/partial/strategy_rb.html","files/lib/picky/generators/partial/substring_rb.html","files/lib/picky/generators/partial_generator_rb.html","files/lib/picky/generators/similarity/default_rb.html","files/lib/picky/generators/similarity/double_metaphone_rb.html","files/lib/picky/generators/similarity/metaphone_rb.html","files/lib/picky/generators/similarity/none_rb.html","files/lib/picky/generators/similarity/phonetic_rb.html","files/lib/picky/generators/similarity/soundex_rb.html","files/lib/picky/generators/similarity/strategy_rb.html","files/lib/picky/generators/similarity_generator_rb.html","files/lib/picky/generators/strategy_rb.html","files/lib/picky/generators/weights/default_rb.html","files/lib/picky/generators/weights/logarithmic_rb.html","files/lib/picky/generators/weights/strategy_rb.html","files/lib/picky/generators/weights_generator_rb.html","files/lib/picky/helpers/measuring_rb.html","files/lib/picky/index_rb.html","files/lib/picky/index_indexed_rb.html","files/lib/picky/index_indexing_rb.html","files/lib/picky/indexed/bundle_rb.html","files/lib/picky/indexed/wrappers/bundle/calculation_rb.html","files/lib/picky/indexed/wrappers/bundle/location_rb.html","files/lib/picky/indexed/wrappers/bundle/wrapper_rb.html","files/lib/picky/indexed/wrappers/category/location_rb.html","files/lib/picky/indexed/wrappers/exact_first_rb.html","files/lib/picky/indexers/base_rb.html","files/lib/picky/indexers/parallel_rb.html","files/lib/picky/indexers/serial_rb.html","files/lib/picky/indexes_rb.html","files/lib/picky/indexes_indexed_rb.html","files/lib/picky/indexes_indexing_rb.html","files/lib/picky/indexing/bundle_rb.html","files/lib/picky/indexing/wrappers/category/location_rb.html","files/lib/picky/interfaces/live_parameters_rb.html","files/lib/picky/loader_rb.html","files/lib/picky/migrations/from_30_to_31_rb.html","files/lib/picky/no_source_specified_exception_rb.html","files/lib/picky/performant_rb.html","files/lib/picky/query/allocation_rb.html","files/lib/picky/query/allocations_rb.html","files/lib/picky/query/combination_rb.html","files/lib/picky/query/combinations_rb.html","files/lib/picky/query/indexes_rb.html","files/lib/picky/query/indexes_check_rb.html","files/lib/picky/query/qualifier_category_mapper_rb.html","files/lib/picky/query/token_rb.html","files/lib/picky/query/tokens_rb.html","files/lib/picky/query/weights_rb.html","files/lib/picky/rack/harakiri_rb.html","files/lib/picky/results_rb.html","files/lib/picky/search_rb.html","files/lib/picky/sinatra_rb.html","files/lib/picky/sources/base_rb.html","files/lib/picky/sources/couch_rb.html","files/lib/picky/sources/csv_rb.html","files/lib/picky/sources/db_rb.html","files/lib/picky/sources/delicious_rb.html","files/lib/picky/sources/mongo_rb.html","files/lib/picky/sources/wrappers/base_rb.html","files/lib/picky/sources/wrappers/location_rb.html","files/lib/picky/statistics_rb.html","files/lib/picky/tasks_rb.html","files/lib/picky/tokenizer_rb.html","files/lib/picky/tokenizers/location_rb.html","files/lib/tasks/application_rake.html","files/lib/tasks/checks_rake.html","files/lib/tasks/framework_rake.html","files/lib/tasks/index_rake.html","files/lib/tasks/routes_rake.html","files/lib/tasks/server_rake.html","files/lib/tasks/statistics_rake.html","files/lib/tasks/todo_rake.html","files/lib/tasks/try_rake.html","files/lib/tasks/try_rb.html"],"info":[["Performant","lib/picky/ext/ruby19/performant.c","classes/Performant.html"," < ","#include \"ruby.h\"  // Copying internal ruby methods. // inline VALUE rb_ary_elt(ary, offset)     VALUE",1],["Array","Performant","classes/Performant/Array.html"," < Object","#include \"ruby.h\"  // Copying internal ruby methods. // inline VALUE rb_ary_elt(ary, offset)     VALUE",1],["Adapters","Picky","classes/Picky/Adapters.html"," < ","",1],["Rack","Picky::Adapters","classes/Picky/Adapters/Rack.html"," < ","Adapter that is plugged into a Rack outlet. --- --- This is an adapter that is plugged into a Rack outlet.",1],["Base","Picky::Adapters::Rack","classes/Picky/Adapters/Rack/Base.html"," < Object","Subclasses of this class should respond to * to_app(options) ",1],["LiveParameters","Picky::Adapters::Rack","classes/Picky/Adapters/Rack/LiveParameters.html"," < Base","",1],["Search","Picky::Adapters::Rack","classes/Picky/Adapters/Rack/Search.html"," < Base","",1],["Application","Picky","classes/Picky/Application.html"," < Object","= Picky Applications A Picky Application is where you configure the whole search engine. This is a step-by-step",1],["Backends","Picky","classes/Picky/Backends.html"," < ","",1],["Backend","Picky::Backends","classes/Picky/Backends/Backend.html"," < Object","",1],["File","Picky::Backends","classes/Picky/Backends/File.html"," < Backend","Naive implementation of a file-based index. In-Memory Hash with length, offset: { :bla => [20, 312] }",1],["Basic","Picky::Backends::File","classes/Picky/Backends/File/Basic.html"," < Object","Base class for all file-based index files. Provides necessary helper methods for its subclasses. Not",1],["JSON","Picky::Backends::File","classes/Picky/Backends/File/JSON.html"," < Basic","File-based index files dumped in the JSON format. ",1],["Memory","Picky::Backends","classes/Picky/Backends/Memory.html"," < Backend","",1],["Basic","Picky::Backends::Memory","classes/Picky/Backends/Memory/Basic.html"," < Object","Base class for all memory-based index files. Provides necessary helper methods for its subclasses. Not",1],["JSON","Picky::Backends::Memory","classes/Picky/Backends/Memory/JSON.html"," < Basic","Memory-based index files dumped in the JSON format. ",1],["Marshal","Picky::Backends::Memory","classes/Picky/Backends/Memory/Marshal.html"," < Basic","Index data in the Ruby Marshal format. ",1],["Text","Picky::Backends::Memory","classes/Picky/Backends/Memory/Text.html"," < Basic","Index data dumped in the text format. TODO Should this really be Memory::Text? ",1],["Redis","Picky::Backends","classes/Picky/Backends/Redis.html"," < Backend","",1],["Basic","Picky::Backends::Redis","classes/Picky/Backends/Redis/Basic.html"," < Object","Redis Backend Accessor. Provides necessary helper methods for its subclasses. Not directly useable, as",1],["Float","Picky::Backends::Redis","classes/Picky/Backends/Redis/Float.html"," < String","",1],["List","Picky::Backends::Redis","classes/Picky/Backends/Redis/List.html"," < Basic","",1],["String","Picky::Backends::Redis","classes/Picky/Backends/Redis/String.html"," < Basic","",1],["Bundle","Picky","classes/Picky/Bundle.html"," < Object","A Bundle is a number of indexes per [index, category] combination. At most, there are three indexes:",1],["Categories","Picky","classes/Picky/Categories.html"," < Object","",1],["Category","Picky","classes/Picky/Category.html"," < Object","",1],["CharacterSubstituters","Picky","classes/Picky/CharacterSubstituters.html"," < ","",1],["WestEuropean","Picky::CharacterSubstituters","classes/Picky/CharacterSubstituters/WestEuropean.html"," < Object","Substitutes Umlauts like ä, ö, ü => ae, oe, ue. (and more, see specs) ",1],["FrontendAdapters","Picky","classes/Picky/FrontendAdapters.html"," < ","",1],["Helpers","Picky","classes/Picky/Helpers.html"," < ","Helper methods for measuring, benchmarking, logging. ",1],["Measuring","Picky::Helpers","classes/Picky/Helpers/Measuring.html"," < ","",1],["Index","Picky","classes/Picky/Index.html"," < Object","",1],["Indexers","Picky","classes/Picky/Indexers.html"," < ","",1],["Base","Picky::Indexers","classes/Picky/Indexers/Base.html"," < Object","",1],["Parallel","Picky::Indexers","classes/Picky/Indexers/Parallel.html"," < Base","Uses a number of categories, a source, and a tokenizer to index data. The tokenizer is taken from each",1],["Serial","Picky::Indexers","classes/Picky/Indexers/Serial.html"," < Base","Uses a category to index its data. Note: It is called serial since it indexes each category separately.",1],["Indexes","Picky","classes/Picky/Indexes.html"," < Object","Indexes indexing. ",1],["Memory","Picky::Indexes","classes/Picky/Indexes/Memory.html"," < Object","",1],["Redis","Picky::Indexes","classes/Picky/Indexes/Redis.html"," < Object","",1],["Interfaces","Picky","classes/Picky/Interfaces.html"," < ","This is very optional. Only load if the user wants it. ",1],["LiveParameters","Picky::Interfaces","classes/Picky/Interfaces/LiveParameters.html"," < Object","This is an interface that provides the user of Picky with the possibility to change parameters while",1],["CouldNotUpdateConfigurationError","Picky::Interfaces::LiveParameters","classes/Picky/Interfaces/LiveParameters/CouldNotUpdateConfigurationError.html"," < StandardError","",1],["NoSourceSpecifiedException","Picky","classes/Picky/NoSourceSpecifiedException.html"," < StandardError","Raised if no source is available on an index. ",1],["Query","Picky","classes/Picky/Query.html"," < ","coding: utf-8 --- encoding: utf-8 ",1],["Indexes","Picky::Query","classes/Picky/Query/Indexes.html"," < Object","The query indexes class bundles indexes given to a query. Example: # If you call Search.new dvd_index,",1],["IndexesCheck","Picky::Query","classes/Picky/Query/IndexesCheck.html"," < Object","TODO Remove. ",1],["Weights","Picky::Query","classes/Picky/Query/Weights.html"," < Object","Calculates scores/weights for combinations. Example: Someone searches for peter fish. Picky might match",1],["Harakiri","Picky::Rack","classes/Picky/Rack/Harakiri.html"," < Object","Simple Rack Middleware to kill Unicorns after X requests. Use as follows in e.g. your rackup File: Rack::Harakiri.after",1],["Results","Picky","classes/Picky/Results.html"," < Object","This is the internal results object. Usually, to_marshal, or to_json is called on it to get a string",1],["Search","Picky","classes/Picky/Search.html"," < Object","= Picky Searches A Picky Search is an object which: * holds one or more indexes * offers an interface",1],["Sinatra","Picky","classes/Picky/Sinatra.html"," < ","This Module is used to install delegator methods into the class for use with Sinatra. ",1],["Sources","Picky","classes/Picky/Sources.html"," < ","= Data Sources Currently, Picky offers the following Sources: * CSV (comma – or other – separated file)",1],["Base","Picky::Sources","classes/Picky/Sources/Base.html"," < Object","Sources are where your data comes from. A source has 1 mandatory and 2 optional methods: * connect_backend",1],["CSV","Picky::Sources","classes/Picky/Sources/CSV.html"," < Base","Describes a CSV source, a file with comma separated values in it. The first column is implicitly assumed",1],["NoFileGiven","Picky::Sources::CSV","classes/Picky/Sources/CSV/NoFileGiven.html"," < StandardError","Raised when a CSV source is instantiated without a file. Example: Sources::CSV.new(:column1, :column2)",1],["Couch","Picky::Sources","classes/Picky/Sources/Couch.html"," < Base","A Couch database source. Options: * url and all the options of a <tt>RestClient::Resource</tt>. See http://github.com/archiloque/rest-client.",1],["NoDBGiven","Picky::Sources::Couch","classes/Picky/Sources/Couch/NoDBGiven.html"," < StandardError","Raised when a Couch source is instantiated without a file. Example: Picky::Sources::Couch.new(:column1,",1],["DB","Picky::Sources","classes/Picky/Sources/DB.html"," < Base","Describes a database source. Needs a SELECT statement (with id in it), and a file option or the options",1],["Delicious","Picky::Sources","classes/Picky/Sources/Delicious.html"," < Base","Describes a Delicious (http://deli.cio.us) source. This source has a fixed set of categories: * title",1],["Mongo","Picky::Sources","classes/Picky/Sources/Mongo.html"," < Base","Important note: We're not sure if this works already. A Mongo database source. Options: * url, db Example:",1],["NoDBGiven","Picky::Sources::Mongo","classes/Picky/Sources/Mongo/NoDBGiven.html"," < StandardError","Raised when a Mongo source is instantiated without a valid uri. Important! You have to start your mongodb",1],["Tokenizer","Picky","classes/Picky/Tokenizer.html"," < Object","Defines tokenizing processes used both in indexing and querying. ",1],["Tokenizers","Picky","classes/Picky/Tokenizers.html"," < ","",1],["Location","Picky::Tokenizers","classes/Picky/Tokenizers/Location.html"," < Picky::Tokenizer","",1],["Try","Picky","classes/Picky/Try.html"," < Object","",1],["<<","Picky::Categories","classes/Picky/Categories.html#M000113","(category)","Add the given category to the list of categories. ",2],["==","Picky::Query::Weights","classes/Picky/Query/Weights.html#M000248","(other)","A Weights instance is == to another if the weights are the same. ",2],["[]","Picky::Backends::File::JSON","classes/Picky/Backends/File/JSON.html#M000026","(key)","See lib/picky/backends/file.rb for what this should return. 1. Gets the length and offset for the key.",2],["[]","Picky::Backends::Redis::Float","classes/Picky/Backends/Redis/Float.html#M000076","(key)","Get a single value. Internal API method for the index. Note: Works like the StringHash method, but returns",2],["[]","Picky::Backends::Redis::List","classes/Picky/Backends/Redis/List.html#M000079","(key)","Get a collection. Internal API method for the index. ",2],["[]","Picky::Backends::Redis::String","classes/Picky/Backends/Redis/String.html#M000082","(key)","Get a single value. Internal API method for the index. ",2],["[]","Picky::Categories","classes/Picky/Categories.html#M000114","(category_name)","Find a given category in the categories. ",2],["[]","Picky::Indexes","classes/Picky/Indexes.html#M000208","(identifier)","Extracts an index, given its identifier. ",2],["after_indexing","Picky::Index","classes/Picky/Index.html#M000190","(after_indexing = nil)","Define what to do after indexing. (Only used in the Sources::DB) ",2],["allocation_for","Picky::Query::Indexes","classes/Picky/Query/Indexes.html#M000243","(tokens, index)","",2],["allocations_ary_for","Picky::Query::Indexes","classes/Picky/Query/Indexes.html#M000242","(tokens)","",2],["allocations_for","Picky::Query::Indexes","classes/Picky/Query/Indexes.html#M000241","(tokens)","Returns a number of possible allocations for the given tokens. ",2],["app_for","Picky::Adapters::Rack","classes/Picky/Adapters/Rack.html#M000006","(thing, options = {})","",2],["backend","Picky::Index","classes/Picky/Index.html#M000167","(backend = nil)","API method. Sets/returns the backend used. Default is @Backends::Memory.new@. ",2],["backup","Picky::Backends::Memory::Basic","classes/Picky/Backends/Memory/Basic.html#M000039","()","Will copy the index file to a location that is in a directory named \"backup\" right under the directory",2],["backup","Picky::Backends::Redis::Basic","classes/Picky/Backends/Redis/Basic.html#M000070","()","Redis doesn't do backup. ",2],["backup","Picky::Bundle","classes/Picky/Bundle.html#M000098","()","Copies the indexes to the \"backup\" directory. ",2],["backup","Picky::Category","classes/Picky/Category.html#M000160","()","Backup the caches. (Revert with restore_caches) ",2],["backup_directory","Picky::Backends::Memory::Basic","classes/Picky/Backends/Memory/Basic.html#M000040","()","The backup directory of this file. Equal to the file's dirname plus /backup ",2],["backup_file_path_of","Picky::Backends::Memory::Basic","classes/Picky/Backends/Memory/Basic.html#M000043","(path)","The backup filename. ",2],["boost","Picky::Search","classes/Picky/Search.html#M000266","(weights)","Examples: search = Search.new(books_index, dvd_index, mp3_index) do boost [:author, :title] => +3, [:title,",2],["bundle_for","Picky::Category","classes/Picky/Category.html#M000135","(token)","Returns the right index bundle for this token. ",2],["cache","Picky::Category","classes/Picky/Category.html#M000144","()","Generates all caches for this category. ",2],["cache_ok?","Picky::Backends::Memory::Basic","classes/Picky/Backends/Memory/Basic.html#M000048","()","Is the cache ok? (existing and larger than zero Bytes in size) A small cache is still ok. ",2],["cache_ok?","Picky::Backends::Redis::Basic","classes/Picky/Backends/Redis/Basic.html#M000073","()","Is the cache ok? A small cache is still ok. ",2],["cache_small?","Picky::Backends::Memory::Basic","classes/Picky/Backends/Memory/Basic.html#M000047","()","Is this cache file suspiciously small? (less than 8 Bytes of size) ",2],["cache_small?","Picky::Backends::Redis::Basic","classes/Picky/Backends/Redis/Basic.html#M000072","()","Is this cache suspiciously small? ",2],["call","Picky::Application","classes/Picky/Application.html#M000010","(env)","A Picky application implements the Rack interface. Delegates to its routing to handle a request. ",2],["call","Picky::Rack::Harakiri","classes/Picky/Rack/Harakiri.html#M000251","(env)","#call interface method. Harakiri is a middleware, so it delegates the the app or the next middleware",2],["cap","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000337","(words)","",2],["cap?","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000338","(words)","",2],["case_sensitive","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000332","(case_sensitive)","",2],["category","Picky::Index","classes/Picky/Index.html#M000168","(category_name, options = {})","Defines a searchable category on the index. === Parameters * category_name: This identifier is used in",2],["check","Picky::Category","classes/Picky/Category.html#M000158","()","Checks the caches for existence. ",2],["check_argument_in","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000339","(method, type, argument, &condition)","Checks if the right argument type has been given. ",2],["check_external_interface","Picky::Application","classes/Picky/Application.html#M000019","()","",2],["check_source_empty","Picky::Index","classes/Picky/Index.html#M000176","()","Check if the given enumerable source is empty. Note: Checking as early as possible to tell the user as",2],["chunksize","Picky::Sources::DB","classes/Picky/Sources/DB.html#M000305","()","The amount of records that are loaded each chunk. ",2],["clear","Picky::Backends::File::JSON","classes/Picky/Backends/File/JSON.html#M000027","()","Clears the currently loaded index. Note: This only clears the in-memory mapping, but this is enough for",2],["clear","Picky::Backends::Redis::List","classes/Picky/Backends/Redis/List.html#M000078","()","Clear the index for this list. Note: Perhaps we can use a server only command. This is not the optimal",2],["clear","Picky::Backends::Redis::String","classes/Picky/Backends/Redis/String.html#M000081","()","Clears the hash. ",2],["clear","Picky::Category","classes/Picky/Category.html#M000159","()","Deletes the caches. ",2],["clear_categories","Picky::Categories","classes/Picky/Categories.html#M000112","()","Clears both the array of categories and the hash of categories. ",2],["clear_indexes","Picky::Indexes","classes/Picky/Indexes.html#M000205","()","Clears the indexes and the mapping. ",2],["close_child","Picky::Interfaces::LiveParameters","classes/Picky/Interfaces/LiveParameters.html#M000223","()","Close the child if it isn't yet closed. ",2],["combination_for","Picky::Category","classes/Picky/Category.html#M000140","(token)","Returns a combination for the token, or nil, if there is none. ",2],["connect_backend","Picky::Sources::Base","classes/Picky/Sources/Base.html#M000276","()","Connect to the backend. Called once per index/category combination before harvesting. Examples: * The",2],["connect_backend","Picky::Sources::DB","classes/Picky/Sources/DB.html#M000294","()","Connect the backend. Will raise unless connection options have been given. ",2],["count","Picky::Sources::DB","classes/Picky/Sources/DB.html#M000296","(index_name)","Counts all the entries that are used for the index. ",2],["create_configuration","Picky::Backends::File","classes/Picky/Backends/File.html#M000035","(bundle)","Returns an object that responds to: [:key] # => value (a value for this config key) ",2],["create_configuration","Picky::Backends::Memory","classes/Picky/Backends/Memory.html#M000065","(bundle)","Returns an object that responds to: [:key] # => value (a value for this config key) ",2],["create_configuration","Picky::Backends::Redis","classes/Picky/Backends/Redis.html#M000087","(bundle)","Returns an object that responds to: [:key] # => value (a value for this config key) ",2],["create_inverted","Picky::Backends::File","classes/Picky/Backends/File.html#M000032","(bundle)","Returns an object that responds to: [:token] # => [id, id, id, id, id] (an array of ids) ",2],["create_inverted","Picky::Backends::Memory","classes/Picky/Backends/Memory.html#M000062","(bundle)","Returns an object that responds to: [:token] # => [id, id, id, id, id] (an array of ids) ",2],["create_inverted","Picky::Backends::Redis","classes/Picky/Backends/Redis.html#M000084","(bundle)","Returns an object that responds to: [:token] # => [id, id, id, id, id] (an array of ids) ",2],["create_similarity","Picky::Backends::File","classes/Picky/Backends/File.html#M000034","(bundle)","Returns an object that responds to: [:encoded] # => [:original, :original] (an array of original symbols",2],["create_similarity","Picky::Backends::Memory","classes/Picky/Backends/Memory.html#M000064","(bundle)","Returns an object that responds to: [:encoded] # => [:original, :original] (an array of original symbols",2],["create_similarity","Picky::Backends::Redis","classes/Picky/Backends/Redis.html#M000086","(bundle)","Returns an object that responds to: [:encoded] # => [:original, :original] (an array of original symbols",2],["create_weights","Picky::Backends::File","classes/Picky/Backends/File.html#M000033","(bundle)","Returns an object that responds to: [:token] # => 1.23 (a weight) ",2],["create_weights","Picky::Backends::Memory","classes/Picky/Backends/Memory.html#M000063","(bundle)","Returns an object that responds to: [:token] # => 1.23 (a weight) ",2],["create_weights","Picky::Backends::Redis","classes/Picky/Backends/Redis.html#M000085","(bundle)","Returns an object that responds to: [:token] # => 1.23 (a weight) ",2],["define_after_indexing","Picky::Index","classes/Picky/Index.html#M000191","(after_indexing)","",2],["define_category","Picky::Index","classes/Picky/Index.html#M000169","(category_name, options = {})","Alias for #category",2],["define_indexing","Picky::Index","classes/Picky/Index.html#M000175","(options = {})","Alias for #indexing",2],["define_key_format","Picky::Index","classes/Picky/Index.html#M000189","(key_format)","",2],["define_ranged_category","Picky::Index","classes/Picky/Index.html#M000171","(category_name, range, options = {})","Alias for #ranged_category",2],["define_result_identifier","Picky::Index","classes/Picky/Index.html#M000165","(result_identifier)","",2],["define_source","Picky::Index","classes/Picky/Index.html#M000183","(source)","",2],["delete","Picky::Backends::Memory::Basic","classes/Picky/Backends/Memory/Basic.html#M000046","()","Deletes the file. ",2],["delete","Picky::Backends::Redis::Basic","classes/Picky/Backends/Redis/Basic.html#M000071","()","Deletes the Redis index namespace. ",2],["delete","Picky::Bundle","classes/Picky/Bundle.html#M000100","()","Delete all index files. ",2],["downcase?","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000335","()","",2],["dump","Picky::Backends::File::JSON","classes/Picky/Backends/File/JSON.html#M000029","(hash)","Dumps the index hash in json format. 1. Dump actual data. 2. Dumps mapping key => [length, offset]. ",2],["dump","Picky::Backends::Memory::JSON","classes/Picky/Backends/Memory/JSON.html#M000051","(hash)","Dumps the index hash in json format. ",2],["dump","Picky::Backends::Memory::Marshal","classes/Picky/Backends/Memory/Marshal.html#M000055","(hash)","Dumps the index hash in marshal format. ",2],["dump","Picky::Backends::Memory::Text","classes/Picky/Backends/Memory/Text.html#M000059","(hash)","Text files are used exclusively for prepared data files. ",2],["dump","Picky::Backends::Redis::List","classes/Picky/Backends/Redis/List.html#M000077","(hash)","Writes the hash into Redis. ",2],["dump","Picky::Backends::Redis::String","classes/Picky/Backends/Redis/String.html#M000080","(hash)","Writes the hash into Redis. Note: We could use multi, but it did not help. ",2],["dump_caches","Picky::Category","classes/Picky/Category.html#M000148","()","",2],["duration","Picky::Results","classes/Picky/Results.html#M000258","()","Duration default is 0. ",2],["each_category","Picky::Category","classes/Picky/Category.html#M000128","()","The category itself just yields itself. ",2],["empty_tokens","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000345","()","Returns empty tokens. ",2],["execute","Picky::Search","classes/Picky/Search.html#M000269","(tokens, ids, offset, original_text = nil)","Execute a search using Query::Tokens. Note: Internal method, use #search to search. ",2],["expand_combinations_from","Picky::Query::Indexes","classes/Picky/Query/Indexes.html#M000244","(possible_combinations)","This is the core of the search engine. No kidding. Gets an array of [ [<combinations for token1>], [<combinations",2],["extended","Picky::Sinatra","classes/Picky/Sinatra.html#M000273","(into)","Privatizes app file methods. ",2],["extension","Picky::Backends::File::Basic","classes/Picky/Backends/File/Basic.html#M000025","()","The default extension for index files is \"index\". ",2],["extension","Picky::Backends::File::JSON","classes/Picky/Backends/File/JSON.html#M000031","()","Uses the extension \"json\". ",2],["extension","Picky::Backends::Memory::Basic","classes/Picky/Backends/Memory/Basic.html#M000038","()","The default extension for index files is \"index\". ",2],["extension","Picky::Backends::Memory::JSON","classes/Picky/Backends/Memory/JSON.html#M000044","()","Uses the extension \"json\". ",2],["extension","Picky::Backends::Memory::Marshal","classes/Picky/Backends/Memory/Marshal.html#M000053","()","Uses the extension \"dump\". ",2],["extension","Picky::Backends::Memory::Text","classes/Picky/Backends/Memory/Text.html#M000057","()","Uses the extension \"txt\". ",2],["extract_configuration","Picky::Interfaces::LiveParameters","classes/Picky/Interfaces/LiveParameters.html#M000226","()","",2],["extract_host","Picky::Backends::Redis","classes/Picky/Backends/Redis.html#M000089","()","",2],["extract_qualifiers_from","Picky::Category","classes/Picky/Category.html#M000127","(options)","Extract qualifiers from the options. ",2],["extract_source","Picky::Category","classes/Picky/Category.html#M000152","()","Extract the actual source if it is wrapped in a time capsule, i.e. a block/lambda. TODO Extract into",2],["extract_source","Picky::Index","classes/Picky/Index.html#M000182","()","Extract the actual source if it is wrapped in a time capsule, i.e. a block/lambda. TODO Extract into",2],["extracted","Picky::Adapters::Rack::Search","classes/Picky/Adapters/Rack/Search.html#M000005","(params)","",2],["from","Picky::Category","classes/Picky/Category.html#M000155","()","Where the data is taken from. ",2],["from","Picky::Results","classes/Picky/Results.html#M000255","(query, amount, offset, allocations)","Create new results and calculate the ids. ",2],["generate_caches_from_memory","Picky::Category","classes/Picky/Category.html#M000147","()","",2],["generate_caches_from_source","Picky::Category","classes/Picky/Category.html#M000145","()","Generate the cache data. ",2],["generate_intermediate_result_id","Picky::Backends::Redis","classes/Picky/Backends/Redis.html#M000092","()","Use the host and pid (generated lazily in child processes) for the result. ",2],["generate_partial","Picky::Category","classes/Picky/Category.html#M000146","()","",2],["harakiri","Picky::Interfaces::LiveParameters","classes/Picky/Interfaces/LiveParameters.html#M000221","()","Kills itself, but still answering the request honorably. ",2],["harakiri","Picky::Rack::Harakiri","classes/Picky/Rack/Harakiri.html#M000252","()","Checks to see if it is time to honorably retire. If yes, kills itself (Unicorn will answer the request,",2],["harakiri?","Picky::Rack::Harakiri","classes/Picky/Rack/Harakiri.html#M000253","()","Is it time to honorably retire? ",2],["harvest","Picky::Sources::CSV","classes/Picky/Sources/CSV.html#M000288","(category)","Harvests the data to index. ",2],["harvest","Picky::Sources::Couch","classes/Picky/Sources/Couch.html#M000282","(category)","",2],["harvest","Picky::Sources::DB","classes/Picky/Sources/DB.html#M000298","(category, &block)","Harvests the data to index in chunks. ",2],["harvest","Picky::Sources::Delicious","classes/Picky/Sources/Delicious.html#M000306","(category)","Harvests the data to index. ",2],["harvest","Picky::Sources::Mongo","classes/Picky/Sources/Mongo.html#M000310","(category)","Fetches the data, @limit=0 will return all records Limit is set to 0 by default - all collection entries",2],["harvest_statement","Picky::Sources::DB","classes/Picky/Sources/DB.html#M000304","(category)","The harvest statement used to pull data from the snapshot table. ",2],["harvest_statement_with_offset","Picky::Sources::DB","classes/Picky/Sources/DB.html#M000300","(category, offset)","Builds a harvest statement for getting data to index. ",2],["host","Picky::Backends::Redis","classes/Picky/Backends/Redis.html#M000090","()","",2],["identifier","Picky::Bundle","classes/Picky/Bundle.html#M000094","()","",2],["identifier","Picky::Category","classes/Picky/Category.html#M000138","()","Identifier for technical output. ",2],["identifier","Picky::Index","classes/Picky/Index.html#M000184","()","Identifier used for technical output. ",2],["identifier","Picky::Indexes","classes/Picky/Indexes.html#M000204","()","",2],["ids","Picky::Backends::File","classes/Picky/Backends/File.html#M000036","(combinations, _, _)","Currently, the loaded ids are intersected using the fast C-based intersection. However, if we could come",2],["ids","Picky::Backends::Memory","classes/Picky/Backends/Memory.html#M000066","(combinations, _, _)","Returns the result ids for the allocation. Sorts the ids by size and & through them in the following",2],["ids","Picky::Backends::Redis","classes/Picky/Backends/Redis.html#M000088","(combinations, amount, offset)","Returns the result ids for the allocation. Developers wanting to program fast intersection routines,",2],["ids","Picky::Category","classes/Picky/Category.html#M000134","(token)","Gets the ids for this token's text. ",2],["ids","Picky::Results","classes/Picky/Results.html#M000256","(amount = 20)","Delegates to allocations. ",2],["index","Picky::Category","classes/Picky/Category.html#M000141","()","Prepares and caches this category. This one should be used by users. ",2],["index","Picky::Index","classes/Picky/Index.html#M000172","()","Calling index on an index will call index on every category. Decides whether to use a parallel indexer",2],["index","Picky::Indexers::Base","classes/Picky/Indexers/Base.html#M000193","(categories)","Starts the indexing process. ",2],["index","Picky::Indexes","classes/Picky/Indexes.html#M000211","(randomly = true)","Runs the indexers in parallel (prepare + cache). ",2],["index_default","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000314","()","",2],["index_default=","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000313","(new_default)","",2],["index_directory","Picky::Category","classes/Picky/Category.html#M000137","()","The index directory for this category. TODO Push down into files? ",2],["index_for_tests","Picky::Indexes","classes/Picky/Indexes.html#M000212","()","For integration testing – indexes for the tests without forking and shouting ;) TODO Rename to #index_without_forking,",2],["index_in_parallel","Picky::Index","classes/Picky/Index.html#M000179","()","Indexes the categories in parallel. Only use where the category does have a #each source defined. ",2],["index_name","Picky::Category","classes/Picky/Category.html#M000125","()","Index name. ",2],["index_path","Picky::Bundle","classes/Picky/Bundle.html#M000097","(type = nil)","Path and partial filename of a specific subindex. Subindexes are: * inverted index * weights index *",2],["indexer","Picky::Category","classes/Picky/Category.html#M000156","()","The indexer is lazily generated and cached. ",2],["indexing","Picky::Application","classes/Picky/Application.html#M000007","(options = {})","Returns a configured tokenizer that is used for indexing by default. ",2],["indexing","Picky::Index","classes/Picky/Index.html#M000174","(options = {})","Define an index tokenizer on the index. Parameters are the exact same as for indexing. ",2],["indexing","Picky::Sinatra","classes/Picky/Sinatra.html#M000274","(options)","Delegates to Application. ",2],["inject_possible_for","Picky::Categories","classes/Picky/Categories.html#M000120","(tokens)","",2],["instance","Picky::Indexes","classes/Picky/Indexes.html#M000203","()","Return the Indexes instance. ",2],["key_format","Picky::Bundle","classes/Picky/Bundle.html#M000096","()","If a key format is set, use it, else delegate to the category. ",2],["key_format","Picky::Category","classes/Picky/Category.html#M000153","()","Return the key format. If the source has no key format, and none is defined on this category, ask the",2],["key_format","Picky::Index","classes/Picky/Index.html#M000188","(format = nil)","Define a key_format on the index. Parameter is a method name to use on the key (e.g. :to_i, :to_s, :strip).",2],["kill_each_worker_except","Picky::Interfaces::LiveParameters","classes/Picky/Interfaces/LiveParameters.html#M000217","(pid)","Taken from Unicorn. ",2],["kill_worker","Picky::Interfaces::LiveParameters","classes/Picky/Interfaces/LiveParameters.html#M000218","(signal, wpid)","",2],["load","Picky::Backends::File::JSON","classes/Picky/Backends/File/JSON.html#M000028","()","Loads the mapping hash from json format. ",2],["load","Picky::Backends::Memory::JSON","classes/Picky/Backends/Memory/JSON.html#M000045","()","Loads the index hash from json format. ",2],["load","Picky::Backends::Memory::Marshal","classes/Picky/Backends/Memory/Marshal.html#M000054","()","Loads the index hash from marshal format. ",2],["load","Picky::Backends::Memory::Text","classes/Picky/Backends/Memory/Text.html#M000058","()","Text files are used exclusively for prepared data files. ",2],["load","Picky::Backends::Redis::Basic","classes/Picky/Backends/Redis/Basic.html#M000068","()","Returns itself. ",2],["load_from_cache","Picky::Category","classes/Picky/Category.html#M000131","()","Loads the index from cache. ",2],["log_type","Picky::Results","classes/Picky/Results.html#M000262","()","The first character in the blog designates what type of query it is. No calculated ids means: No results.",2],["map_categories","Picky::Query::Indexes","classes/Picky/Query/Indexes.html#M000238","()","",2],["maximum_tokens","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000336","(amount)","",2],["new","Picky::Adapters::Rack::LiveParameters","classes/Picky/Adapters/Rack/LiveParameters.html#M000001","(live_parameters)","",2],["new","Picky::Adapters::Rack::Search","classes/Picky/Adapters/Rack/Search.html#M000003","(query)","",2],["new","Picky::Backends::File::Basic","classes/Picky/Backends/File/Basic.html#M000024","(cache_path)","An index cache takes a path, without file extension, which will be provided by the subclasses. ",2],["new","Picky::Backends::Memory::Basic","classes/Picky/Backends/Memory/Basic.html#M000037","(cache_path)","An index cache takes a path, without file extension, which will be provided by the subclasses. ",2],["new","Picky::Backends::Redis","classes/Picky/Backends/Redis.html#M000083","(options = {})","",2],["new","Picky::Backends::Redis::Basic","classes/Picky/Backends/Redis/Basic.html#M000067","(client, namespace)","An index cache takes a path, without file extension, which will be provided by the subclasses. ",2],["new","Picky::Bundle","classes/Picky/Bundle.html#M000093","(name, category, backend, similarity_strategy, options = {})","",2],["new","Picky::Categories","classes/Picky/Categories.html#M000111","(options = {})","A list of indexed categories. Options: * ignore_unassigned_tokens: Ignore the given token if it cannot",2],["new","Picky::Category","classes/Picky/Category.html#M000123","(name, index, options = {})","Mandatory params: * name: Category name to use as identifier and file names. * index: Index to which",2],["new","Picky::Index","classes/Picky/Index.html#M000166","(name, options = {})","Create a new index with a given source. === Parameters * name: A name that will be used for the index",2],["new","Picky::Indexers::Base","classes/Picky/Indexers/Base.html#M000192","(index_or_category)","",2],["new","Picky::Indexes","classes/Picky/Indexes.html#M000202","()","",2],["new","Picky::Indexes::Memory","classes/Picky/Indexes/Memory.html#M000234","(*)","",2],["new","Picky::Indexes::Redis","classes/Picky/Indexes/Redis.html#M000235","(*)","",2],["new","Picky::Interfaces::LiveParameters","classes/Picky/Interfaces/LiveParameters.html#M000214","()","",2],["new","Picky::Interfaces::LiveParameters::CouldNotUpdateConfigurationError","classes/Picky/Interfaces/LiveParameters/CouldNotUpdateConfigurationError.html#M000224","(config_key, message)","",2],["new","Picky::Query::Indexes","classes/Picky/Query/Indexes.html#M000237","(*indexes)","Creates a new Query::Indexes. Its job is to generate all possible combinations. Note: We cannot mix memory",2],["new","Picky::Query::Weights","classes/Picky/Query/Weights.html#M000245","(weights = {})","Needs a Hash of [:category_name1, :category_name2] => +3 (some positive or negative weight) ",2],["new","Picky::Rack::Harakiri","classes/Picky/Rack/Harakiri.html#M000250","(app)","",2],["new","Picky::Results","classes/Picky/Results.html#M000254","(query = nil, amount = 0, offset = 0, allocations = Query::Allocations.new)","Takes instances of Query::Allocations as param. ",2],["new","Picky::Search","classes/Picky/Search.html#M000264","(*index_definitions)","Takes: * A number of indexes TODO Add identifiers_to_remove (rename) and reduce_allocations_to_amount",2],["new","Picky::Sources::CSV","classes/Picky/Sources/CSV.html#M000285","(*category_names, options)","",2],["new","Picky::Sources::Couch","classes/Picky/Sources/Couch.html#M000279","(*category_names, options)","",2],["new","Picky::Sources::DB","classes/Picky/Sources/DB.html#M000290","(select_statement, options = { file: 'app/db.yml' })","",2],["new","Picky::Sources::Delicious","classes/Picky/Sources/Delicious.html#M000301","(username, password)","",2],["new","Picky::Sources::Mongo","classes/Picky/Sources/Mongo.html#M000308","(*category_names, options)","",2],["new","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000340","(options = {})","",2],["new","Picky::Tokenizers::Location","classes/Picky/Tokenizers/Location.html#M000333","(options = {})","",2],["new","Picky::Try","classes/Picky/Try.html#M000346","(text, index = nil, category = nil)","",2],["normalize_with_patterns","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000326","(text)","",2],["normalize_with_patterns?","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000327","()","",2],["normalizes_words","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000325","(regexp_replaces)","Normalizing. We only allow arrays. ",2],["open","Picky::Backends::Memory::Text","classes/Picky/Backends/Memory/Text.html#M000061","(&block)","",2],["output","Picky::Try","classes/Picky/Try.html#M000349","()","",2],["parameters","Picky::Interfaces::LiveParameters","classes/Picky/Interfaces/LiveParameters.html#M000220","(configuration_hash)","Updates any parameters with the ones given and returns the updated params. The params are a strictly",2],["pid","Picky::Backends::Redis","classes/Picky/Backends/Redis.html#M000091","()","",2],["possible_categories","Picky::Categories","classes/Picky/Categories.html#M000122","(token)","This returns the possible categories for this token. If the user has already preselected a category for",2],["possible_combinations","Picky::Categories","classes/Picky/Categories.html#M000117","(token)","Return all possible combinations for the given token. This checks if it needs to also search through",2],["possible_for","Picky::Categories","classes/Picky/Categories.html#M000121","(token, preselected_categories = nil)","Returns possible Combinations for the token. Note: The preselected_categories param is an optimization.",2],["prepare","Picky::Category","classes/Picky/Category.html#M000142","()","Indexes, creates the \"prepared_...\" file. ",2],["prepare","Picky::Indexers::Base","classes/Picky/Indexers/Base.html#M000194","(categories)","By default, an indexer * prepares the index directories. ",2],["prepare!","Picky::Results","classes/Picky/Results.html#M000259","()","This starts the actual processing. Without this, the allocations are not processed, and no ids are calculated.",2],["prepare_backup","Picky::Backends::Memory::Basic","classes/Picky/Backends/Memory/Basic.html#M000041","(target)","Prepares the backup directory for the file. ",2],["prepare_index_directory","Picky::Category","classes/Picky/Category.html#M000136","()","Creates the index directory including all necessary paths above it. Note: Interface method called by",2],["prepared_allocations_for","Picky::Query::Indexes","classes/Picky/Query/Indexes.html#M000240","(tokens, weights = {})","Returns a number of prepared (sorted, reduced etc.) allocations for the given tokens. ",2],["prepared_index_file","Picky::Category","classes/Picky/Category.html#M000130","(&block)","Get an opened index file. Note: If you don't use it with the block, do not forget to close it. ",2],["prepared_index_path","Picky::Category","classes/Picky/Category.html#M000129","()","Path and partial filename of the prepared index on this category. ",2],["preprocess","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000342","(text)","Default preprocessing hook. Does: 1. Character substitution. 2. Remove illegal expressions. 3. Remove",2],["pretokenize","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000343","(text)","Pretokenizing. Does: * Split the text into words. * Cap the amount of tokens if maximum_tokens is set.",2],["process","Picky::Indexers::Parallel","classes/Picky/Indexers/Parallel.html#M000195","(categories)","Process does the actual indexing. Parameters: * categories: An Enumerable of Category-s. ",2],["process","Picky::Indexers::Serial","classes/Picky/Indexers/Serial.html#M000199","(categories)","Harvest the data from the source, tokenize, and write to an intermediate \"prepared index\" file. Parameters:",2],["qualifiers","Picky::Category","classes/Picky/Category.html#M000126","()","Returns the qualifiers if set or just the name if not. ",2],["query_default","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000316","()","",2],["query_default=","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000315","(new_default)","",2],["querying_removes_characters","Picky::Interfaces::LiveParameters","classes/Picky/Interfaces/LiveParameters.html#M000227","()","TODO Move to Interface object. ",2],["querying_removes_characters=","Picky::Interfaces::LiveParameters","classes/Picky/Interfaces/LiveParameters.html#M000228","(new_value)","",2],["querying_splits_text_on","Picky::Interfaces::LiveParameters","classes/Picky/Interfaces/LiveParameters.html#M000231","()","",2],["querying_splits_text_on=","Picky::Interfaces::LiveParameters","classes/Picky/Interfaces/LiveParameters.html#M000232","(new_value)","",2],["querying_stopwords","Picky::Interfaces::LiveParameters","classes/Picky/Interfaces/LiveParameters.html#M000229","()","",2],["querying_stopwords=","Picky::Interfaces::LiveParameters","classes/Picky/Interfaces/LiveParameters.html#M000230","(new_value)","",2],["raise_cache_missing","Picky::Bundle","classes/Picky/Bundle.html#M000105","(what)","Raises an appropriate error message for the given cache. ",2],["raise_no_source","Picky::Index","classes/Picky/Index.html#M000186","()","",2],["raise_not_found","Picky::Categories","classes/Picky/Categories.html#M000115","(category_name)","",2],["raise_not_found","Picky::Indexes","classes/Picky/Indexes.html#M000209","(index_name)","Raises a not found for the index. ",2],["raise_unless_cache_exists","Picky::Bundle","classes/Picky/Bundle.html#M000101","()","Alerts the user if an index is missing. ",2],["raise_unless_index_exists","Picky::Bundle","classes/Picky/Bundle.html#M000102","()","Alerts the user if one of the necessary indexes (core, weights) is missing. ",2],["raise_unless_index_ok","Picky::Bundle","classes/Picky/Bundle.html#M000109","()","Alerts the user if the core or weights indexes are not there. ",2],["raise_unless_similarity_exists","Picky::Bundle","classes/Picky/Bundle.html#M000103","()","Alerts the user if the similarity index is missing (given that it's used). ",2],["raise_unless_similarity_ok","Picky::Bundle","classes/Picky/Bundle.html#M000107","()","Alerts the user if the similarity index is not there. ",2],["ranged_category","Picky::Index","classes/Picky/Index.html#M000170","(category_name, range, options = {})","Make this category range searchable with a fixed range. If you need other ranges, define another category",2],["register","Picky::Indexes","classes/Picky/Indexes.html#M000207","(index)","",2],["register","Picky::Indexes","classes/Picky/Indexes.html#M000206","(index)","Registers an index with the indexes. ",2],["reindex","Picky::Category","classes/Picky/Category.html#M000124","()","Indexes and reloads the category. ",2],["reject","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000331","(tokens)","",2],["rejects_token_if","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000330","(&condition)","Reject tokens after tokenizing based on the given criteria. ",2],["reload","Picky::Application","classes/Picky/Application.html#M000013","()","Reloads & finalizes the apps. ",2],["reload","Picky::Category","classes/Picky/Category.html#M000132","()","Alias for #load_from_cache",2],["remove_illegals","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000322","(text)","",2],["remove_non_single_stopwords","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000320","(text)","",2],["remove_stopwords","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000319","(text)","",2],["remove_worker","Picky::Interfaces::LiveParameters","classes/Picky/Interfaces/LiveParameters.html#M000219","(wpid)","TODO This needs to be Webserver agnostic. ",2],["removes_characters","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000321","(regexp)","Illegals. We only allow regexps (even if string would be okay too for gsub! - it's too hard to understand)",2],["reset_rack_adapter","Picky::Application","classes/Picky/Application.html#M000012","()","",2],["respond_with","Picky::Adapters::Rack::Base","classes/Picky/Adapters/Rack/Base.html#M000000","(response, content_type = 'application/json')","Puts together an appropriately structured Rack response. Note: Bytesize is needed to have special characters",2],["restore","Picky::Backends::Memory::Basic","classes/Picky/Backends/Memory/Basic.html#M000042","()","Copies the file from its backup location back to the original location. ",2],["restore","Picky::Bundle","classes/Picky/Bundle.html#M000099","()","Restores the indexes from the \"backup\" directory. ",2],["restore","Picky::Category","classes/Picky/Category.html#M000161","()","Restore the caches. (Revert with backup_caches) ",2],["result_identifier","Picky::Index","classes/Picky/Index.html#M000164","(result_identifier = nil)","Define how the results of this index are identified. (Shown in the client, for example) Default is the",2],["retrieve","Picky::Backends::File::JSON","classes/Picky/Backends/File/JSON.html#M000030","()","A json file does not provide retrieve functionality. ",2],["retrieve","Picky::Backends::Memory::JSON","classes/Picky/Backends/Memory/JSON.html#M000052","()","A json file does not provide retrieve functionality. ",2],["retrieve","Picky::Backends::Memory::Marshal","classes/Picky/Backends/Memory/Marshal.html#M000056","()","A marshal file does not provide retrieve functionality. ",2],["retrieve","Picky::Backends::Memory::Text","classes/Picky/Backends/Memory/Text.html#M000060","()","Retrieves prepared index data in the form * id,data\\n * id,data\\n * id,data\\n Yields an id string and",2],["retrieve","Picky::Backends::Redis::Basic","classes/Picky/Backends/Redis/Basic.html#M000069","()","We do not use Redis to retrieve data. ",2],["route","Picky::Application","classes/Picky/Application.html#M000009","(options)","Routes. ",2],["saved","Picky::Try","classes/Picky/Try.html#M000347","()","",2],["score_for","Picky::Query::Weights","classes/Picky/Query/Weights.html#M000247","(combinations)","API. Calculates a score for the combinations. Implement #weight_for(category_names) if you don't need",2],["search","Picky::Search","classes/Picky/Search.html#M000267","(text, ids = 20, offset = 0)","This is the main entry point for a query. Use this in specs and also for running queries. Parameters:",2],["search_with","Picky::Search","classes/Picky/Search.html#M000268","(tokens, ids = 20, offset = 0, original_text = nil)","Runs the actual search using Query::Tokens. Note: Internal method, use #search to search. ",2],["searched","Picky::Try","classes/Picky/Try.html#M000348","()","",2],["searching","Picky::Application","classes/Picky/Application.html#M000008","(options = {})","Returns a configured tokenizer that is used for querying by default. ",2],["searching","Picky::Search","classes/Picky/Search.html#M000265","(options)","Examples: search = Search.new(index1, index2, index3) do searching removes_characters: /[^a-z]/, # etc.",2],["searching","Picky::Sinatra","classes/Picky/Sinatra.html#M000275","(options)","Delegates to Application. ",2],["similar","Picky::Bundle","classes/Picky/Bundle.html#M000095","(text)","Get a list of similar texts. Note: Does not return itself. ",2],["similar_possible_for","Picky::Categories","classes/Picky/Categories.html#M000118","(token)","Gets all similar tokens and puts together the possible combinations for each found similar token. ",2],["similar_tokens_for","Picky::Categories","classes/Picky/Categories.html#M000119","(token)","Returns all possible similar tokens for the given token. ",2],["size","Picky::Backends::Redis::Basic","classes/Picky/Backends/Redis/Basic.html#M000074","()","Extracts the size of the file in Bytes. Note: This is a very forgiving implementation. But as long as",2],["size_of","Picky::Backends::Memory::Basic","classes/Picky/Backends/Memory/Basic.html#M000049","(path)","Extracts the size of the file in Bytes. ",2],["snapshot_table_name","Picky::Sources::DB","classes/Picky/Sources/DB.html#M000297","(index_name)","The name of the snapshot table created by Picky. ",2],["source","Picky::Category","classes/Picky/Category.html#M000151","()","Return an appropriate source. If we have no explicit source, we'll check the index for one. ",2],["source","Picky::Index","classes/Picky/Index.html#M000181","(some_source = nil, &block)","Define a source on the index. Parameter is a source, either one of the standard sources or anything responding",2],["split","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000324","(text)","",2],["splits_text_on","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000323","(regexp_or_string)","Splitting. We allow Strings and Regexps. Note: We do not test against to_str since symbols do not work",2],["start_master_process_thread","Picky::Interfaces::LiveParameters","classes/Picky/Interfaces/LiveParameters.html#M000215","()","This runs a thread that listens to child processes. ",2],["stopwords","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000318","(regexp)","Stopwords. We only allow regexps (even if string would be okay too for gsub! - it's too hard to understand)",2],["substitute","Picky::CharacterSubstituters::WestEuropean","classes/Picky/CharacterSubstituters/WestEuropean.html#M000150","(text)","Substitutes occurrences of certain characters (like Umlauts) with ASCII representations of them. Examples:",2],["substitute_characters","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000329","(text)","",2],["substitutes_characters_with","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000328","(substituter = CharacterSubstituters::WestEuropean.new)","Substitute Characters with this substituter. Default is European Character substitution. ",2],["take_snapshot","Picky::Sources::Base","classes/Picky/Sources/Base.html#M000277","(index)","Used to take a snapshot of your data if it is fast changing. Called once for each index before harvesting.",2],["take_snapshot","Picky::Sources::DB","classes/Picky/Sources/DB.html#M000295","(index)","Take a snapshot of the data. Uses CREATE TABLE AS with the given SELECT statement to create a snapshot",2],["timed","Picky::Helpers::Measuring","classes/Picky/Helpers/Measuring.html#M000163","(*args, &block)","Returns a duration in seconds. ",2],["to_app","Picky::Adapters::Rack::LiveParameters","classes/Picky/Adapters/Rack/LiveParameters.html#M000002","(options = {})","",2],["to_app","Picky::Adapters::Rack::Search","classes/Picky/Adapters/Rack/Search.html#M000004","(options = {})","",2],["to_hash","Picky::Results","classes/Picky/Results.html#M000260","()","Returns a hash with the allocations, offset, duration and total. ",2],["to_json","Picky::Results","classes/Picky/Results.html#M000261","(options = {})","Convert to json format. ",2],["to_routes","Picky::Application","classes/Picky/Application.html#M000021","()","",2],["to_s","Picky::Backends::Backend","classes/Picky/Backends/Backend.html#M000023","()","",2],["to_s","Picky::Backends::Memory::Basic","classes/Picky/Backends/Memory/Basic.html#M000050","()","",2],["to_s","Picky::Backends::Redis::Basic","classes/Picky/Backends/Redis/Basic.html#M000075","()","",2],["to_s","Picky::Bundle","classes/Picky/Bundle.html#M000110","()","",2],["to_s","Picky::Categories","classes/Picky/Categories.html#M000116","()","",2],["to_s","Picky::Category","classes/Picky/Category.html#M000139","()","",2],["to_s","Picky::Index","classes/Picky/Index.html#M000185","()","",2],["to_s","Picky::Indexes","classes/Picky/Indexes.html#M000210","()","",2],["to_s","Picky::Interfaces::LiveParameters","classes/Picky/Interfaces/LiveParameters.html#M000233","()","",2],["to_s","Picky::Query::Weights","classes/Picky/Query/Weights.html#M000249","()","Prints out a nice representation of the configured weights. ",2],["to_s","Picky::Results","classes/Picky/Results.html#M000263","()","For logging. ",2],["to_s","Picky::Search","classes/Picky/Search.html#M000272","()","Display some nice information for the user. ",2],["to_s","Picky::Sources::CSV","classes/Picky/Sources/CSV.html#M000286","()","",2],["to_s","Picky::Sources::Couch","classes/Picky/Sources/Couch.html#M000280","()","",2],["to_s","Picky::Sources::DB","classes/Picky/Sources/DB.html#M000291","()","",2],["to_s","Picky::Sources::Delicious","classes/Picky/Sources/Delicious.html#M000303","()","",2],["to_s","Picky::Sources::Mongo","classes/Picky/Sources/Mongo.html#M000312","()","",2],["to_s","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000317","()","",2],["to_stats","Picky::Application","classes/Picky/Application.html#M000020","()","",2],["to_stdout","Picky::Try","classes/Picky/Try.html#M000350","()","",2],["tokenize","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000341","(text)","Returns a number of tokens, generated from the given text, based on the parameters given. Returns: [[:token1,",2],["tokenize","Picky::Tokenizers::Location","classes/Picky/Tokenizers/Location.html#M000334","(text)","",2],["tokenized","Picky::Search","classes/Picky/Search.html#M000270","(text)","Delegates the tokenizing to the query tokenizer. Parameters: * text: The string to tokenize. Returns:",2],["tokenizer","Picky::Category","classes/Picky/Category.html#M000157","()","Returns an appropriate tokenizer. If one isn't set on this category, will try the index, and finally",2],["tokenizer","Picky::Index","classes/Picky/Index.html#M000180","()","Returns the installed tokenizer or the default. ",2],["tokenizer","Picky::Indexes","classes/Picky/Indexes.html#M000213","()","",2],["tokens_for","Picky::Tokenizer","classes/Picky/Tokenizer.html#M000344","(words)","Downcases. ",2],["total","Picky::Results","classes/Picky/Results.html#M000257","()","The total results. Delegates to the allocations. ",2],["try_updating_configuration_with","Picky::Interfaces::LiveParameters","classes/Picky/Interfaces/LiveParameters.html#M000225","(configuration_hash)","Tries updating the configuration in the child process or parent process. ",2],["warn_cache_small","Picky::Bundle","classes/Picky/Bundle.html#M000104","(what)","Outputs a warning for the given cache. ",2],["warn_if_index_small","Picky::Bundle","classes/Picky/Bundle.html#M000108","()","Warns the user if the core or weights indexes are small. ",2],["warn_if_similarity_small","Picky::Bundle","classes/Picky/Bundle.html#M000106","()","Warns the user if the similarity index is small. ",2],["weight","Picky::Category","classes/Picky/Category.html#M000133","(token)","Gets the weight for this token's text. ",2],["weight_for","Picky::Query::Weights","classes/Picky/Query/Weights.html#M000246","(category_names)","API. Get the weight for an array of category names. Example: [:name, :height, :color] returns +3, but",2],["with_data_snapshot","Picky::Category","classes/Picky/Category.html#M000143","()","Take a data snapshot if the source offers it. ",2],["with_data_snapshot","Picky::Index","classes/Picky/Index.html#M000177","()","Note: Duplicated in category_indexing.rb. Take a data snapshot if the source offers it. ",2],["with_snapshot","Picky::Sources::Base","classes/Picky/Sources/Base.html#M000278","(index)","Used to check if a snapshot has been done already. Example: * In a DB source, a table based on the source's",2],["worker_pids","Picky::Interfaces::LiveParameters","classes/Picky/Interfaces/LiveParameters.html#M000216","()","TODO This needs to be webserver agnostic. ",2],["write_parent","Picky::Interfaces::LiveParameters","classes/Picky/Interfaces/LiveParameters.html#M000222","(configuration_hash)","Write the parent. Note: The ;;; is the end marker for the message. ",2],["picky.rb","files/lib/picky_rb.html","files/lib/picky_rb.html","","",3],["rack.rb","files/lib/picky/adapters/rack_rb.html","files/lib/picky/adapters/rack_rb.html","","",3],["base.rb","files/lib/picky/adapters/rack/base_rb.html","files/lib/picky/adapters/rack/base_rb.html","","",3],["live_parameters.rb","files/lib/picky/adapters/rack/live_parameters_rb.html","files/lib/picky/adapters/rack/live_parameters_rb.html","","",3],["search.rb","files/lib/picky/adapters/rack/search_rb.html","files/lib/picky/adapters/rack/search_rb.html","","",3],["analyzer.rb","files/lib/picky/analyzer_rb.html","files/lib/picky/analyzer_rb.html","","encoding: utf-8 ",3],["application.rb","files/lib/picky/application_rb.html","files/lib/picky/application_rb.html","","",3],["backend.rb","files/lib/picky/backends/backend_rb.html","files/lib/picky/backends/backend_rb.html","","",3],["file.rb","files/lib/picky/backends/file_rb.html","files/lib/picky/backends/file_rb.html","","",3],["basic.rb","files/lib/picky/backends/file/basic_rb.html","files/lib/picky/backends/file/basic_rb.html","","",3],["json.rb","files/lib/picky/backends/file/json_rb.html","files/lib/picky/backends/file/json_rb.html","","",3],["memory.rb","files/lib/picky/backends/memory_rb.html","files/lib/picky/backends/memory_rb.html","","",3],["basic.rb","files/lib/picky/backends/memory/basic_rb.html","files/lib/picky/backends/memory/basic_rb.html","","",3],["json.rb","files/lib/picky/backends/memory/json_rb.html","files/lib/picky/backends/memory/json_rb.html","","",3],["marshal.rb","files/lib/picky/backends/memory/marshal_rb.html","files/lib/picky/backends/memory/marshal_rb.html","","",3],["text.rb","files/lib/picky/backends/memory/text_rb.html","files/lib/picky/backends/memory/text_rb.html","","",3],["redis.rb","files/lib/picky/backends/redis_rb.html","files/lib/picky/backends/redis_rb.html","","",3],["basic.rb","files/lib/picky/backends/redis/basic_rb.html","files/lib/picky/backends/redis/basic_rb.html","","",3],["float.rb","files/lib/picky/backends/redis/float_rb.html","files/lib/picky/backends/redis/float_rb.html","","",3],["list.rb","files/lib/picky/backends/redis/list_rb.html","files/lib/picky/backends/redis/list_rb.html","","",3],["string.rb","files/lib/picky/backends/redis/string_rb.html","files/lib/picky/backends/redis/string_rb.html","","",3],["bundle.rb","files/lib/picky/bundle_rb.html","files/lib/picky/bundle_rb.html","","",3],["bundling.rb","files/lib/picky/bundling_rb.html","files/lib/picky/bundling_rb.html","","",3],["location.rb","files/lib/picky/calculations/location_rb.html","files/lib/picky/calculations/location_rb.html","","",3],["categories.rb","files/lib/picky/categories_rb.html","files/lib/picky/categories_rb.html","","",3],["categories_indexed.rb","files/lib/picky/categories_indexed_rb.html","files/lib/picky/categories_indexed_rb.html","","",3],["categories_indexing.rb","files/lib/picky/categories_indexing_rb.html","files/lib/picky/categories_indexing_rb.html","","",3],["category.rb","files/lib/picky/category_rb.html","files/lib/picky/category_rb.html","","",3],["category_indexed.rb","files/lib/picky/category_indexed_rb.html","files/lib/picky/category_indexed_rb.html","","",3],["category_indexing.rb","files/lib/picky/category_indexing_rb.html","files/lib/picky/category_indexing_rb.html","","",3],["west_european.rb","files/lib/picky/character_substituters/west_european_rb.html","files/lib/picky/character_substituters/west_european_rb.html","","encoding: utf-8 THINK Does it also remove diaritics, like べ to へ? --- encoding: utf-8 --- encoding: utf-8",3],["constants.rb","files/lib/picky/constants_rb.html","files/lib/picky/constants_rb.html","","Set constants. ",3],["cores.rb","files/lib/picky/cores_rb.html","files/lib/picky/cores_rb.html","","",3],["deployment.rb","files/lib/picky/deployment_rb.html","files/lib/picky/deployment_rb.html","","",3],["maybe_compile.rb","files/lib/picky/ext/maybe_compile_rb.html","files/lib/picky/ext/maybe_compile_rb.html","","",3],["Makefile","files/lib/picky/ext/ruby19/Makefile.html","files/lib/picky/ext/ruby19/Makefile.html",""," SHELL = /bin/sh  #### Start of system configuration section. ####  srcdir = . topdir = /Users/admin/.rvm/rubies/ruby-1.9.2-p136/include/ruby-1.9.1",3],["extconf.rb","files/lib/picky/ext/ruby19/extconf_rb.html","files/lib/picky/ext/ruby19/extconf_rb.html","","",3],["mkmf.log","files/lib/picky/ext/ruby19/mkmf_log.html","files/lib/picky/ext/ruby19/mkmf_log.html","","have_header: checking for ruby.h... -------------------- yes  \"gcc -o conftest -I/Users/admin/.rvm/rubies/ruby-1.9.2-p136/include/ruby-1.9.1/x86_64-darwin10.4.0",3],["performant.c","files/lib/picky/ext/ruby19/performant_c.html","files/lib/picky/ext/ruby19/performant_c.html","","",3],["array.rb","files/lib/picky/extensions/array_rb.html","files/lib/picky/extensions/array_rb.html","","The Array class we all know and love. ",3],["class.rb","files/lib/picky/extensions/class_rb.html","files/lib/picky/extensions/class_rb.html","","The original Class class. ",3],["hash.rb","files/lib/picky/extensions/hash_rb.html","files/lib/picky/extensions/hash_rb.html","","Extensions for the Hash. ",3],["module.rb","files/lib/picky/extensions/module_rb.html","files/lib/picky/extensions/module_rb.html","","The original Module class. ",3],["object.rb","files/lib/picky/extensions/object_rb.html","files/lib/picky/extensions/object_rb.html","","",3],["symbol.rb","files/lib/picky/extensions/symbol_rb.html","files/lib/picky/extensions/symbol_rb.html","","Extending the Symbol class. ",3],["rack.rb","files/lib/picky/frontend_adapters/rack_rb.html","files/lib/picky/frontend_adapters/rack_rb.html","","",3],["aliases.rb","files/lib/picky/generators/aliases_rb.html","files/lib/picky/generators/aliases_rb.html","","",3],["base.rb","files/lib/picky/generators/base_rb.html","files/lib/picky/generators/base_rb.html","","",3],["default.rb","files/lib/picky/generators/partial/default_rb.html","files/lib/picky/generators/partial/default_rb.html","","",3],["infix.rb","files/lib/picky/generators/partial/infix_rb.html","files/lib/picky/generators/partial/infix_rb.html","","",3],["none.rb","files/lib/picky/generators/partial/none_rb.html","files/lib/picky/generators/partial/none_rb.html","","",3],["strategy.rb","files/lib/picky/generators/partial/strategy_rb.html","files/lib/picky/generators/partial/strategy_rb.html","","",3],["substring.rb","files/lib/picky/generators/partial/substring_rb.html","files/lib/picky/generators/partial/substring_rb.html","","",3],["partial_generator.rb","files/lib/picky/generators/partial_generator_rb.html","files/lib/picky/generators/partial_generator_rb.html","","",3],["default.rb","files/lib/picky/generators/similarity/default_rb.html","files/lib/picky/generators/similarity/default_rb.html","","",3],["double_metaphone.rb","files/lib/picky/generators/similarity/double_metaphone_rb.html","files/lib/picky/generators/similarity/double_metaphone_rb.html","","",3],["metaphone.rb","files/lib/picky/generators/similarity/metaphone_rb.html","files/lib/picky/generators/similarity/metaphone_rb.html","","",3],["none.rb","files/lib/picky/generators/similarity/none_rb.html","files/lib/picky/generators/similarity/none_rb.html","","",3],["phonetic.rb","files/lib/picky/generators/similarity/phonetic_rb.html","files/lib/picky/generators/similarity/phonetic_rb.html","","",3],["soundex.rb","files/lib/picky/generators/similarity/soundex_rb.html","files/lib/picky/generators/similarity/soundex_rb.html","","",3],["strategy.rb","files/lib/picky/generators/similarity/strategy_rb.html","files/lib/picky/generators/similarity/strategy_rb.html","","",3],["similarity_generator.rb","files/lib/picky/generators/similarity_generator_rb.html","files/lib/picky/generators/similarity_generator_rb.html","","",3],["strategy.rb","files/lib/picky/generators/strategy_rb.html","files/lib/picky/generators/strategy_rb.html","","",3],["default.rb","files/lib/picky/generators/weights/default_rb.html","files/lib/picky/generators/weights/default_rb.html","","",3],["logarithmic.rb","files/lib/picky/generators/weights/logarithmic_rb.html","files/lib/picky/generators/weights/logarithmic_rb.html","","",3],["strategy.rb","files/lib/picky/generators/weights/strategy_rb.html","files/lib/picky/generators/weights/strategy_rb.html","","",3],["weights_generator.rb","files/lib/picky/generators/weights_generator_rb.html","files/lib/picky/generators/weights_generator_rb.html","","",3],["measuring.rb","files/lib/picky/helpers/measuring_rb.html","files/lib/picky/helpers/measuring_rb.html","","",3],["index.rb","files/lib/picky/index_rb.html","files/lib/picky/index_rb.html","","",3],["index_indexed.rb","files/lib/picky/index_indexed_rb.html","files/lib/picky/index_indexed_rb.html","","",3],["index_indexing.rb","files/lib/picky/index_indexing_rb.html","files/lib/picky/index_indexing_rb.html","","",3],["bundle.rb","files/lib/picky/indexed/bundle_rb.html","files/lib/picky/indexed/bundle_rb.html","","",3],["calculation.rb","files/lib/picky/indexed/wrappers/bundle/calculation_rb.html","files/lib/picky/indexed/wrappers/bundle/calculation_rb.html","","",3],["location.rb","files/lib/picky/indexed/wrappers/bundle/location_rb.html","files/lib/picky/indexed/wrappers/bundle/location_rb.html","","",3],["wrapper.rb","files/lib/picky/indexed/wrappers/bundle/wrapper_rb.html","files/lib/picky/indexed/wrappers/bundle/wrapper_rb.html","","",3],["location.rb","files/lib/picky/indexed/wrappers/category/location_rb.html","files/lib/picky/indexed/wrappers/category/location_rb.html","","",3],["exact_first.rb","files/lib/picky/indexed/wrappers/exact_first_rb.html","files/lib/picky/indexed/wrappers/exact_first_rb.html","","encoding: utf-8 ",3],["base.rb","files/lib/picky/indexers/base_rb.html","files/lib/picky/indexers/base_rb.html","","encoding: utf-8 ",3],["parallel.rb","files/lib/picky/indexers/parallel_rb.html","files/lib/picky/indexers/parallel_rb.html","","encoding: utf-8 ",3],["serial.rb","files/lib/picky/indexers/serial_rb.html","files/lib/picky/indexers/serial_rb.html","","encoding: utf-8 ",3],["indexes.rb","files/lib/picky/indexes_rb.html","files/lib/picky/indexes_rb.html","","",3],["indexes_indexed.rb","files/lib/picky/indexes_indexed_rb.html","files/lib/picky/indexes_indexed_rb.html","","",3],["indexes_indexing.rb","files/lib/picky/indexes_indexing_rb.html","files/lib/picky/indexes_indexing_rb.html","","",3],["bundle.rb","files/lib/picky/indexing/bundle_rb.html","files/lib/picky/indexing/bundle_rb.html","","",3],["location.rb","files/lib/picky/indexing/wrappers/category/location_rb.html","files/lib/picky/indexing/wrappers/category/location_rb.html","","",3],["live_parameters.rb","files/lib/picky/interfaces/live_parameters_rb.html","files/lib/picky/interfaces/live_parameters_rb.html","","",3],["loader.rb","files/lib/picky/loader_rb.html","files/lib/picky/loader_rb.html","","",3],["from_30_to_31.rb","files/lib/picky/migrations/from_30_to_31_rb.html","files/lib/picky/migrations/from_30_to_31_rb.html","","",3],["no_source_specified_exception.rb","files/lib/picky/no_source_specified_exception_rb.html","files/lib/picky/no_source_specified_exception_rb.html","","",3],["performant.rb","files/lib/picky/performant_rb.html","files/lib/picky/performant_rb.html","","",3],["allocation.rb","files/lib/picky/query/allocation_rb.html","files/lib/picky/query/allocation_rb.html","","",3],["allocations.rb","files/lib/picky/query/allocations_rb.html","files/lib/picky/query/allocations_rb.html","","",3],["combination.rb","files/lib/picky/query/combination_rb.html","files/lib/picky/query/combination_rb.html","","",3],["combinations.rb","files/lib/picky/query/combinations_rb.html","files/lib/picky/query/combinations_rb.html","","",3],["indexes.rb","files/lib/picky/query/indexes_rb.html","files/lib/picky/query/indexes_rb.html","","",3],["indexes_check.rb","files/lib/picky/query/indexes_check_rb.html","files/lib/picky/query/indexes_check_rb.html","","",3],["qualifier_category_mapper.rb","files/lib/picky/query/qualifier_category_mapper_rb.html","files/lib/picky/query/qualifier_category_mapper_rb.html","","",3],["token.rb","files/lib/picky/query/token_rb.html","files/lib/picky/query/token_rb.html","","",3],["tokens.rb","files/lib/picky/query/tokens_rb.html","files/lib/picky/query/tokens_rb.html","","",3],["weights.rb","files/lib/picky/query/weights_rb.html","files/lib/picky/query/weights_rb.html","","",3],["harakiri.rb","files/lib/picky/rack/harakiri_rb.html","files/lib/picky/rack/harakiri_rb.html","","",3],["results.rb","files/lib/picky/results_rb.html","files/lib/picky/results_rb.html","","",3],["search.rb","files/lib/picky/search_rb.html","files/lib/picky/search_rb.html","","encoding: utf-8 ",3],["sinatra.rb","files/lib/picky/sinatra_rb.html","files/lib/picky/sinatra_rb.html","","",3],["base.rb","files/lib/picky/sources/base_rb.html","files/lib/picky/sources/base_rb.html","","",3],["couch.rb","files/lib/picky/sources/couch_rb.html","files/lib/picky/sources/couch_rb.html","","",3],["csv.rb","files/lib/picky/sources/csv_rb.html","files/lib/picky/sources/csv_rb.html","","",3],["db.rb","files/lib/picky/sources/db_rb.html","files/lib/picky/sources/db_rb.html","","",3],["delicious.rb","files/lib/picky/sources/delicious_rb.html","files/lib/picky/sources/delicious_rb.html","","",3],["mongo.rb","files/lib/picky/sources/mongo_rb.html","files/lib/picky/sources/mongo_rb.html","","",3],["base.rb","files/lib/picky/sources/wrappers/base_rb.html","files/lib/picky/sources/wrappers/base_rb.html","","",3],["location.rb","files/lib/picky/sources/wrappers/location_rb.html","files/lib/picky/sources/wrappers/location_rb.html","","",3],["statistics.rb","files/lib/picky/statistics_rb.html","files/lib/picky/statistics_rb.html","","encoding: utf-8 ",3],["tasks.rb","files/lib/picky/tasks_rb.html","files/lib/picky/tasks_rb.html","","",3],["tokenizer.rb","files/lib/picky/tokenizer_rb.html","files/lib/picky/tokenizer_rb.html","","encoding: utf-8 ",3],["location.rb","files/lib/picky/tokenizers/location_rb.html","files/lib/picky/tokenizers/location_rb.html","","",3],["application.rake","files/lib/tasks/application_rake.html","files/lib/tasks/application_rake.html","","# desc \"Loads the application, including its configuration.\" # # Note: This is used by tasks to load",3],["checks.rake","files/lib/tasks/checks_rake.html","files/lib/tasks/checks_rake.html","","# Checks to help the user. # desc 'Checks if index files are small/missing (index, category optional).'",3],["framework.rake","files/lib/tasks/framework_rake.html","files/lib/tasks/framework_rake.html","","# desc \"Loads the framework.\" # # Note: This is used by tasks to load the framework as a dependency.",3],["index.rake","files/lib/tasks/index_rake.html","files/lib/tasks/index_rake.html","","# Indexing tasks. # desc \"Generate the index (index, category optional).\" task :index, [:index, :category]",3],["routes.rake","files/lib/tasks/routes_rake.html","files/lib/tasks/routes_rake.html","","# Routing tasks. # desc \"Shows the available URL paths.\" task :routes => :application do   Picky::Application.apps.each",3],["server.rake","files/lib/tasks/server_rake.html","files/lib/tasks/server_rake.html","","# Server tasks, like starting/stopping/restarting. # desc \"Start the server.\" task :start do   Rake::Task[:'server:start'].invoke",3],["statistics.rake","files/lib/tasks/statistics_rake.html","files/lib/tasks/statistics_rake.html","","# Statistics tasks. # desc \"Analyzes indexes (index, category optional).\" task :analyze, [:index, :category]",3],["todo.rake","files/lib/tasks/todo_rake.html","files/lib/tasks/todo_rake.html","","desc \"Finds where Picky still needs input from you.\" task :\"to#{}do\" do   if system \"grep -e 'TO#{}DO.*'",3],["try.rake","files/lib/tasks/try_rake.html","files/lib/tasks/try_rake.html","","# Tasks for manually testing your engine configuration. # desc \"Try the given text in the indexer/query",3],["try.rb","files/lib/tasks/try_rb.html","files/lib/tasks/try_rb.html","","",3]]}}